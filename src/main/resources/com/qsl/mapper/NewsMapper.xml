<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qsl.mapper.NewsMapper">
    <resultMap id="News" type="com.qsl.entity.News">
        <id column="news_id" property="newsId" jdbcType="INTEGER"/>
        <result column="news_user_id" property="newsUserId" jdbcType="INTEGER"/>
        <result column="news_title" property="newsTitle" jdbcType="VARCHAR"/>
        <result column="news_content" property="newsContent" jdbcType="LONGVARCHAR"/>
        <result column="news_summary" property="newsSummary" jdbcType="VARCHAR"/>
        <result column="news_view_count" property="newsViewCount" jdbcType="INTEGER"/>
        <result column="news_comment_count" property="newsCommentCount" jdbcType="INTEGER"/>
        <result column="news_like_count" property="newsLikeCount" jdbcType="INTEGER"/>
        <result column="news_is_comment" property="newsIsComment" jdbcType="INTEGER"/>
        <result column="news_order" property="newsOrder" jdbcType="INTEGER"/>
        <result column="news_create_time" property="newsCreateTime" jdbcType="TIMESTAMP"/>
        <result column="news_update_time" property="newsUpdateTime" jdbcType="TIMESTAMP"/>
        <result column="news_status" property="newsStatus" jdbcType="INTEGER"/>
        <result column="news_thumbnail" property="newsThumbnail" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="tb">news</sql>

    <sql id="Base_Column_List">
    news_id, news_user_id, news_title, news_content,news_summary, news_view_count, news_comment_count, news_like_count, news_create_time,
    news_update_time, news_is_comment, news_status, news_order, news_thumbnail
    </sql>


    <!--新闻归档-->
    <select id="listAllNotWithContent" resultType="com.qsl.entity.News">
        SELECT
        news_id, news_user_id, news_title, news_create_time, news_thumbnail
        FROM
        <include refid="tb"/>
        WHERE news_status = 1
        ORDER BY news_id DESC
    </select>

    <!--查询新闻-->
    <select id="findAll" resultMap="News">
        SELECT
        news.*
        FROM
        news
        <where>
            <if test="status != null">
                news.news_status = #{status} AND
            </if>
            <if test="keywords != null">
                news.news_title LIKE concat(concat('%',#{keywords}),'%') AND
            </if>
            <if test="userId != null">
                news.news_user_id = #{userId} AND
            </if>
            <if test="categoryId != null">
                news.news_id IN (
                SELECT news_category_ref.news_id FROM news_category_ref
                WHERE news_category_ref.category_id = #{categoryId}
                ) AND
            </if>
            <if test="keywordId != null">
                news.news_id IN (
                SELECT news_keyword_ref.news_id FROM news_keyword_ref
                WHERE news_keyword_ref.keyword_id = #{keywordId}
                ) AND
            </if>
            1 = 1
        </where>
        ORDER BY `news`.`news_order` DESC, `news`.`news_id` DESC
    </select>

    <!--根据id删除新闻-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from
        <include refid="tb"/>
        where news_id = #{newsId,jdbcType=INTEGER}
    </delete>


    <!--批量删除新闻-->
    <delete id="deleteBatch" parameterType="list">
        DELETE FROM
        <include refid="tb"/>
        <if test="ids != null">
            WHERE news_id IN
            <foreach collection="ids" open="(" close=")" separator="," item="id">
                #{id}
            </foreach>
        </if>
    </delete>

    <!--根据用户ID删除新闻-->
    <delete id="deleteByUserId">
        DELETE FROM
        <include refid="tb"/>
        WHERE news_user_id = #{userId}
    </delete>

    <!--添加新闻-->
    <insert id="insert" parameterType="com.qsl.entity.News" useGeneratedKeys="true"
            keyProperty="newsId">
        insert into
        <include refid="tb"/>
        (news_user_id, news_title,
        news_view_count, news_comment_count,
        news_like_count, news_create_time, news_update_time,
        news_is_comment, news_status, news_order,
        news_content, news_summary,news_thumbnail)
        values (#{newsUserId,jdbcType=INTEGER}, #{newsTitle,jdbcType=VARCHAR},
        #{newsViewCount,jdbcType=INTEGER},
        #{newsCommentCount,jdbcType=INTEGER},
        #{newsLikeCount,jdbcType=INTEGER}, #{newsCreateTime,jdbcType=TIMESTAMP},
        #{newsUpdateTime,jdbcType=TIMESTAMP},
        #{newsIsComment,jdbcType=INTEGER}, #{newsStatus,jdbcType=INTEGER}, #{newsOrder,jdbcType=INTEGER},
        #{newsContent,jdbcType=LONGVARCHAR}, #{newsSummary,jdbcType=VARCHAR}, #{newsThumbnail})
    </insert>

    <!--修改新闻-->
    <update id="update" parameterType="com.qsl.entity.News">
        update
        <include refid="tb"/>
        <set>
            <if test="newsUserId != null">news_user_id = #{newsUserId,jdbcType=INTEGER},</if>
            <if test="newsTitle != null">news_title = #{newsTitle,jdbcType=VARCHAR},</if>
            <if test="newsViewCount != null">news_view_count = #{newsViewCount,jdbcType=INTEGER},</if>
            <if test="newsCommentCount != null">news_comment_count = #{newsCommentCount,jdbcType=INTEGER},</if>
            <if test="newsLikeCount != null">news_like_count = #{newsLikeCount,jdbcType=INTEGER},</if>
            <if test="newsCreateTime != null">news_create_time = #{newsCreateTime,jdbcType=TIMESTAMP},</if>
            <if test="newsUpdateTime != null">news_update_time = #{newsUpdateTime,jdbcType=TIMESTAMP},</if>
            <if test="newsIsComment != null">news_is_comment = #{newsIsComment,jdbcType=INTEGER},</if>
            <if test="newsStatus != null">news_status = #{newsStatus,jdbcType=INTEGER},</if>
            <if test="newsOrder != null">news_order = #{newsOrder,jdbcType=INTEGER},</if>
            <if test="newsContent != null">news_content = #{newsContent,jdbcType=LONGVARCHAR},</if>
            <if test="newsSummary != null">news_summary = #{newsSummary,jdbcType=VARCHAR},</if>
            <if test="newsThumbnail != null">news_thumbnail = #{newsThumbnail,jdbcType=VARCHAR},</if>
        </set>
        where news_id = #{newsId,jdbcType=INTEGER}
    </update>

    <!--获取新闻总数-->
    <select id="countNews" resultType="Integer">
        SELECT COUNT(*) FROM
        <include refid="tb"/>
        WHERE news_status = 1
    </select>

    <!--获得新闻留言总数-->
    <select id="countNewsComment" resultType="Integer">
        SELECT SUM(news_comment_count)
        FROM
        <include refid="tb"/>
        WHERE news_status = 1
    </select>


    <!--统计新闻总访问量-->
    <select id="countNewsView" resultType="Integer">
        SELECT SUM(news_view_count) FROM
        <include refid="tb"/>
        WHERE news_status = 1
    </select>

    <!--获得所有新闻-->
    <select id="listNews" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE news_status = 1
        ORDER BY news_status ASC, news_order DESC, news_id DESC
    </select>

    <select id="getNewsByStatusAndId" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="status != null">
                news_status = #{status} AND
            </if>
            news_id = #{id}
        </where>
    </select>

    <!--通过分页查询新闻-->
    <select id="pageNews" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            <if test="status!=null">
                news_status=#{status}
            </if>
        </where>
        ORDER BY news_status ASC, news_order DESC, news_id DESC
        limit #{pageIndex},#{pageSize}
    </select>

    <!--获得访问量较多的新闻-->
    <select id="listNewsByViewCount" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE news_status = 1
        ORDER BY news_view_count DESC,news_order DESC, news_id DESC
        limit #{limit}

    </select>


    <!--获得下一篇的新闻-->
    <select id="getAfterNews" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            news_id > #{id} AND news_status = 1
        </where>
        ORDER BY news_id
        limit 1
    </select>

    <!--获得上一篇的新闻-->
    <select id="getPreNews" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        <where>
            news_id &lt; #{id} AND news_status = 1
        </where>
        ORDER BY news_id
        limit 1
    </select>

    <!--获得随机新闻-->
    <select id="listRandomNews" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE news_status = 1
        ORDER BY
        RAND()
        limit #{limit}
    </select>

    <!--获得评论数较多的新闻列表-->
    <select id="listNewsByCommentCount" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE news_status = 1
        ORDER BY
        news_comment_count DESC,news_order DESC, news_id DESC
        limit #{limit}
    </select>

    <update id="updateCommentCount" parameterType="Integer">
        UPDATE
        <include refid="tb"/>
        SET news_comment_count =
        (
        SELECT count(*) FROM `comment`
        WHERE news.news_id=comment.comment_news_id
        )
        WHERE news_id=#{newsId}
    </update>

    <!--获得最后更新的记录-->
    <select id="getLastUpdateNews" resultType="com.qsl.entity.News">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        <include refid="tb"/>
        WHERE
        news_status = 1 AND news_update_time=
        (
        SELECT max(news_update_time) FROM news
        )
    </select>

    <select id="countNewsByUser" parameterType="Integer" resultType="Integer">
        SELECT COUNT(*)
        FROM
        <include refid="tb"/>
        WHERE news_user_id=#{id} AND news_status = 1
    </select>

    <select id="findNewsByCategoryId" resultType="com.qsl.entity.News">
        SELECT
        news.news_id, news.news_user_id, news.news_title,
        news.news_view_count, news.news_comment_count,
        news.news_like_count, news.news_create_time, news.news_update_time,
        news.news_is_comment, news.news_status, news.news_order,
        news.news_summary, news.news_thumbnail
        FROM news, news_category_ref
        WHERE
        news.news_status = 1 AND
        news.news_id = news_category_ref.news_id AND
        news_category_ref.category_id = #{catgeoyrId}
        LIMIT #{limit}
    </select>

    <select id="findNewsByCategoryIds" resultType="com.qsl.entity.News">
        SELECT
        distinct news.news_id, news.news_user_id, news.news_title,
        news.news_view_count, news.news_comment_count,
        news.news_like_count, news.news_create_time, news.news_update_time,
        news.news_is_comment, news.news_status, news.news_order,
        news.news_summary, news.news_thumbnail
        FROM news, news_category_ref
        <where>
            news.news_status = 1 AND
            news.news_id = news_category_ref.news_id AND
            news_category_ref.category_id
            <if test="categoryIds != null">
                IN
                <foreach collection="categoryIds" open="(" close=")" separator="," item="id">
                    #{id}
                </foreach>
            </if>
        </where>
        LIMIT #{limit}
    </select>


    <select id="listNewsByLimit" resultType="com.qsl.entity.News">
        SELECT
        news_id, news_user_id, news_title, news_view_count, news_comment_count, news_like_count,
        news_create_time,
        news_update_time, news_is_comment, news_status, news_order, news_thumbnail
        FROM
        <include refid="tb"/>
        <where>
            <if test="userId != null">
                news_user_id = #{userId}
            </if>
        </where>
        ORDER BY news_id DESC
        LIMIT #{limit}
    </select>

    <select id="listNewsIdsByUserId" resultType="java.lang.Integer">
        SELECT
        news_id
        FROM
        <include refid="tb"/>
        WHERE
        news_user_id = #{userId}
    </select>
</mapper>
